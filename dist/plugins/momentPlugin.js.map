{"version":3,"file":"momentPlugin.js","sources":["../../src/utils/dom.ts","../../src/plugins/momentPlugin.ts"],"sourcesContent":["export function toggleClass(\n  elem: HTMLElement,\n  className: string,\n  bool: boolean\n) {\n  if (bool === true) return elem.classList.add(className);\n  elem.classList.remove(className);\n}\n\nexport function createElement<T extends HTMLElement>(\n  tag: keyof HTMLElementTagNameMap,\n  className: string,\n  content?: string\n): T {\n  const e = window.document.createElement(tag) as T;\n  className = className || \"\";\n  content = content || \"\";\n\n  e.className = className;\n\n  if (content !== undefined) e.textContent = content;\n\n  return e;\n}\n\nexport function clearNode(node: HTMLElement) {\n  while (node.firstChild) node.removeChild(node.firstChild);\n}\n\nexport function findParent(\n  node: Element,\n  condition: (n: Element) => boolean\n): Element | undefined {\n  if (condition(node)) return node;\n  else if (node.parentNode)\n    return findParent(node.parentNode as Element, condition);\n\n  return undefined; // nothing found\n}\n\nexport function createNumberInput(\n  inputClassName: string,\n  opts?: Record<string, any>\n) {\n  const wrapper = createElement<HTMLDivElement>(\"div\", \"numInputWrapper\"),\n    numInput = createElement<HTMLInputElement>(\n      \"input\",\n      \"numInput \" + inputClassName\n    ),\n    arrowUp = createElement<HTMLSpanElement>(\"span\", \"arrowUp\"),\n    arrowDown = createElement<HTMLSpanElement>(\"span\", \"arrowDown\");\n\n  if (navigator.userAgent.indexOf(\"MSIE 9.0\") === -1) {\n    numInput.type = \"number\";\n  } else {\n    numInput.type = \"text\";\n    numInput.pattern = \"\\\\d*\";\n  }\n\n  if (opts !== undefined)\n    for (const key in opts) numInput.setAttribute(key, opts[key]);\n\n  wrapper.appendChild(numInput);\n  wrapper.appendChild(arrowUp);\n  wrapper.appendChild(arrowDown);\n\n  return wrapper;\n}\n\nexport function getEventTarget(event: Event): EventTarget | null {\n  if (typeof event.composedPath === \"function\") {\n    const path = event.composedPath();\n\n    return path[0];\n  }\n\n  return event.target;\n}\n","import { Plugin } from '../types/options'\nimport { IncrementEvent } from '../utils'\nimport { getEventTarget } from '../utils/dom'\n\nexport interface Config {\n  moment: Function;\n}\n\nfunction momentPlugin(config: Config): Plugin {\n\n  const moment = config.moment\n\n  return function (fp) {\n    function captureIncrement(e: Event) {\n      const event = e as IncrementEvent\n      event.stopPropagation()\n      const date = moment(fp.selectedDates[0])\n\n      const input = getEventTarget(event) as HTMLInputElement\n      const unit = Array.from(input.classList)\n        .filter(name => name.startsWith('flatpickr-'))\n        .map(name => name.substring(10))[0]\n      const step = parseFloat(input.getAttribute(\"step\") as string)\n\n      date.add(step * event.delta, unit)\n      fp.setDate(date.toDate())\n    }\n\n    return {\n      parseDate: (datestr, format) => {\n        return moment(datestr, format, true).toDate()\n      },\n      formatDate: (date, format) => {\n        // locale can also be used\n        const momentDate = moment(date)\n        if (typeof fp.config.locale === 'string') {\n          momentDate.locale(fp.config.locale)\n        }\n        return momentDate.format(format)\n      },\n      onReady() {\n        [fp.hourElement, fp.minuteElement, fp.secondElement]\n          .forEach(element =>\n            element && element.addEventListener('increment', captureIncrement, {\n              capture: true\n            })\n          )\n      },\n      onDestroy() {\n        [fp.hourElement, fp.minuteElement, fp.secondElement]\n          .forEach(element =>\n            element && element.removeEventListener('increment', captureIncrement, {\n              capture: true\n            })\n          )\n      }\n    }\n  }\n}\n\nexport default momentPlugin\n"],"names":[],"mappings":";;;;;;WAqEgB,cAAc,CAAC,KAAY;MACzC,IAAI,OAAO,KAAK,CAAC,YAAY,KAAK,UAAU,EAAE;UAC5C,IAAM,IAAI,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;UAElC,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;OAChB;MAED,OAAO,KAAK,CAAC,MAAM,CAAC;EACtB;;ECrEA,SAAS,YAAY,CAAC,MAAc;MAElC,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAA;MAE5B,OAAO,UAAU,EAAE;UACjB,SAAS,gBAAgB,CAAC,CAAQ;cAChC,IAAM,KAAK,GAAG,CAAmB,CAAA;cACjC,KAAK,CAAC,eAAe,EAAE,CAAA;cACvB,IAAM,IAAI,GAAG,MAAM,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAA;cAExC,IAAM,KAAK,GAAG,cAAc,CAAC,KAAK,CAAqB,CAAA;cACvD,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;mBACrC,MAAM,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,GAAA,CAAC;mBAC7C,GAAG,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,GAAA,CAAC,CAAC,CAAC,CAAC,CAAA;cACrC,IAAM,IAAI,GAAG,UAAU,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,CAAW,CAAC,CAAA;cAE7D,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,CAAA;cAClC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAA;WAC1B;UAED,OAAO;cACL,SAAS,EAAE,UAAC,OAAO,EAAE,MAAM;kBACzB,OAAO,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC,MAAM,EAAE,CAAA;eAC9C;cACD,UAAU,EAAE,UAAC,IAAI,EAAE,MAAM;;kBAEvB,IAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,CAAA;kBAC/B,IAAI,OAAO,EAAE,CAAC,MAAM,CAAC,MAAM,KAAK,QAAQ,EAAE;sBACxC,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;mBACpC;kBACD,OAAO,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;eACjC;cACD,OAAO;kBACL,CAAC,EAAE,CAAC,WAAW,EAAE,EAAE,CAAC,aAAa,EAAE,EAAE,CAAC,aAAa,CAAC;uBACjD,OAAO,CAAC,UAAA,OAAO;sBACd,OAAA,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC,WAAW,EAAE,gBAAgB,EAAE;0BACjE,OAAO,EAAE,IAAI;uBACd,CAAC;mBAAA,CACH,CAAA;eACJ;cACD,SAAS;kBACP,CAAC,EAAE,CAAC,WAAW,EAAE,EAAE,CAAC,aAAa,EAAE,EAAE,CAAC,aAAa,CAAC;uBACjD,OAAO,CAAC,UAAA,OAAO;sBACd,OAAA,OAAO,IAAI,OAAO,CAAC,mBAAmB,CAAC,WAAW,EAAE,gBAAgB,EAAE;0BACpE,OAAO,EAAE,IAAI;uBACd,CAAC;mBAAA,CACH,CAAA;eACJ;WACF,CAAA;OACF,CAAA;EACH;;;;;;;;"}